"""
This is the Jinja2 template for generating algorithm implementation code.
It receives an `AlgorithmSpec` object as `spec`.
"""

# imports

from dataclasses import dataclass
from typing import List
from algolib._typing import ComparableT
from algolib.algorithms.sorting.base import Sorter

class {{ spec.name.replace(" ", "") }}(Sorter):
    """
    {{ spec.description }}
    """
    def __init__(self):
        pass

    def run(self, {% for p in spec.parameters %}{{ p.name }}: {{ p.type }}{% if not loop.last %}, {% endif %}{% endfor %}) -> {{ spec.returns.type }}:
        """
        {{ spec.description }}
        """
        pass
